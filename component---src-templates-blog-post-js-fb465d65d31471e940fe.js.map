{"version":3,"file":"component---src-templates-blog-post-js-fb465d65d31471e940fe.js","mappings":"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","sources":["webpack://disenchanted/./content/assets/avatar.png","webpack://disenchanted/./src/components/bio.js","webpack://disenchanted/./src/components/translation.js","webpack://disenchanted/./src/templates/blog-post.js","webpack://disenchanted/./i18n.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/avatar-678cd3b9a4104c87c61957b95588848e.png\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport avatar from \"../../content/assets/avatar.png\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <img\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n          width: rhythm(2),\n          height: rhythm(2),\n        }}\n        src={avatar}\n      />\n      <p style={{ whiteSpace: \"pre-wrap\" }}>\n        Personal blog by{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={`https://github.com/${social.github}`}\n        >\n          {author}\n        </a>\n        .{\"\\n\"}\n        Kiss the demons out of my dreams.\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { supportedLanguages } from \"../../i18n\"\n\nconst Panel = ({ children, style = {} }) => {\n  return (\n    <p\n      style={{\n        fontSize: \"0.9em\",\n        border: \"1px solid var(--hr)\",\n        borderRadius: \"0.75em\",\n        padding: \"0.75em\",\n        background: \"var(--inlineCode-bg)\",\n        wordBreak: \"keep-all\",\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  )\n}\n\nconst codeToLanguage = l => {\n  return supportedLanguages[l]\n}\n\nconst matchPath = /\\/(\\w|-)+|-+/g\n\nconst Translation = ({ translations, location }) => {\n  if (!translations) {\n    const [lang, origin] = location.pathname.match(matchPath)\n    return (\n      <div className=\"translations\">\n        <Panel>\n          <Link to={origin}>Read the original</Link>\n          {\" • \"}\n          <Link to={lang}>View all translated posts</Link>\n        </Panel>\n      </div>\n    )\n  }\n\n  if (!translations.length) {\n    return null\n  }\n\n  return (\n    <div className=\"translations\">\n      <Panel>\n        <span>Translated into: </span>\n        <>\n          {translations.map(l => (\n            <Link key={l} to={`/${l}/${location.pathname.replaceAll(\"/\", \"\")}`}>\n              {codeToLanguage(l)}\n            </Link>\n          ))}\n        </>\n      </Panel>\n    </div>\n  )\n}\n\nexport default Translation\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Translation from \"../components/translation\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const title = data.site.siteMetadata.title\n  const social = data.site.siteMetadata.social\n  const { previous, next, translations, langKey } = pageContext\n\n  return (\n    <Layout location={location} title={title} social={social}>\n      <Seo\n        lang={langKey}\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n              color: \"var(--textTitle)\",\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n          <Translation location={location} translations={translations} />\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        social {\n          twitter\n          github\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`\n","exports.supportedLanguages = {\n  en: \"English\",\n  \"zh-hans\": \"简体中文\",\n}\n"],"names":["Bio","data","useStaticQuery","author","social","site","siteMetadata","React","style","display","marginBottom","rhythm","alt","marginRight","minWidth","borderRadius","width","height","src","avatar","whiteSpace","target","rel","href","github","Panel","_ref","children","fontSize","border","padding","background","wordBreak","matchPath","_ref2","translations","location","lang","origin","pathname","match","className","Link","to","length","map","l","key","replaceAll","supportedLanguages","codeToLanguage","pageContext","post","markdownRemark","title","previous","next","langKey","Layout","Seo","frontmatter","description","excerpt","marginTop","color","scale","date","Translation","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","fields","slug","exports","en"],"sourceRoot":""}