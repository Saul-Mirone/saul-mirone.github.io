{"version":3,"file":"component---src-templates-blog-index-js-9b5854f0fc70b52aed3d.js","mappings":"uKAAA,EAAe,IAA0B,qD,UCwDzC,MA3CYA,KACV,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,eAatB,OAAEC,GAAWF,EAAKG,KAAKC,aAC7B,OACEC,EAAAA,cAAA,OACEC,MAAO,CACLC,QAAQ,OACRC,cAAcC,EAAAA,EAAAA,IAAO,OAGvBJ,EAAAA,cAAA,OACEK,IAAKR,EACLI,MAAO,CACLK,aAAaF,EAAAA,EAAAA,IAAO,IACpBD,aAAc,EACdI,SAAU,GACVC,aAAa,OACbC,OAAOL,EAAAA,EAAAA,IAAO,GACdM,QAAQN,EAAAA,EAAAA,IAAO,IAEjBO,IAAKC,IAEPZ,EAAAA,cAAA,KAAGC,MAAO,CAAEY,WAAY,aAAc,mBACnB,IACjBb,EAAAA,cAAA,KAAGc,KAAK,kCAAkCjB,GAAW,IAAE,KAAK,qCAG1D,C,2FCNV,UAtCkBkB,IAAsC,IAArC,KAAEpB,EAAI,SAAEqB,EAAQ,YAAEC,GAAaF,EAChD,MAAMG,EAAYvB,EAAKG,KAAKC,aAAaoB,MACnCC,EAAQzB,EAAK0B,kBAAkBC,MAErC,OACEtB,EAAAA,cAACuB,EAAAA,EAAM,CAACP,SAAUA,EAAUG,MAAOD,GACjClB,EAAAA,cAACwB,EAAAA,EAAG,CAACL,MAAM,GAAGM,KAAMR,EAAYS,UAChC1B,EAAAA,cAACN,EAAAA,EAAG,MACH0B,EAAMO,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAMT,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KACpD,OACEhC,EAAAA,cAAA,WAASiC,IAAKJ,EAAKE,OAAOC,MACxBhC,EAAAA,cAAA,cACEA,EAAAA,cAAA,MACEC,MAAO,CACLE,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3BJ,EAAAA,cAACkC,EAAAA,KAAI,CAACjC,MAAO,CAAEkC,UAAU,QAAWC,GAAIP,EAAKE,OAAOC,MACjDb,IAGLnB,EAAAA,cAAA,aAAQ6B,EAAKC,YAAYO,OAE3BrC,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEsC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,YAI3C,IAGP,C","sources":["webpack://disenchanted/./content/assets/avatar.png","webpack://disenchanted/./src/components/bio.js","webpack://disenchanted/./src/templates/blog-index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/avatar-36bef4fb01d04c9721ed1ec1bc3a32e4.png\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport avatar from \"../../content/assets/avatar.png\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <img\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n          width: rhythm(2),\n          height: rhythm(2),\n        }}\n        src={avatar}\n      />\n      <p style={{ whiteSpace: \"pre-wrap\" }}>\n        Personal blog by{\" \"}\n        <a href=\"https://github.com/Saul-Mirone\">{author}</a>.{\"\\n\"}\n        Kiss the demons out of my dreams.\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"\" lang={pageContext.langKey} />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: {frontmatter: {date: DESC}}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            langKey\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","React","style","display","marginBottom","rhythm","alt","marginRight","minWidth","borderRadius","width","height","src","avatar","whiteSpace","href","_ref","location","pageContext","siteTitle","title","posts","allMarkdownRemark","edges","Layout","Seo","lang","langKey","map","_ref2","node","frontmatter","fields","slug","key","Link","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}