{"version":3,"file":"component---src-templates-blog-index-js-e1ef9cf484a9ee1a1ff1.js","mappings":"uLAAA,EAAe,IAA0B,0D,UC+DzC,EAlDY,WACV,IAoBA,GApBaA,EAAAA,EAAAA,gBAAe,aAoBIC,KAAKC,aAA7BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAChB,OACE,uBACEC,MAAO,CACLC,QAAQ,OACRC,cAAcC,EAAAA,EAAAA,IAAO,OAGvB,uBACEC,IAAKN,EACLE,MAAO,CACLK,aAAaF,EAAAA,EAAAA,IAAO,IACpBD,aAAc,EACdI,SAAU,GACVC,aAAa,OACbC,OAAOL,EAAAA,EAAAA,IAAO,GACdM,QAAQN,EAAAA,EAAAA,IAAO,IAEjBO,IAAKC,IAEP,qBAAGX,MAAO,CAAEY,WAAY,aAAxB,mBACmB,IACjB,qBAAGC,KAAI,uBAAyBd,EAAOe,SAAYhB,GAFrD,IAEkE,KAFlE,wC,4FCRN,UAtCkB,SAAC,GAAqC,IAAnCiB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7BC,EAAYH,EAAKnB,KAAKC,aAAasB,MACnCC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUG,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,GAAGI,KAAMN,EAAYO,UAChC,gBAAC,IAAD,MACCJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,2BAASC,IAAKJ,EAAKE,OAAOC,MACxB,8BACE,sBACE7B,MAAO,CACLE,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3B,gBAAC,EAAA4B,KAAD,CAAM/B,MAAO,CAAEgC,UAAU,QAAWC,GAAIP,EAAKE,OAAOC,MACjDV,IAGL,6BAAQO,EAAKC,YAAYO,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY","sources":["webpack://gatsby-starter-blog/./content/assets/profile-pic.jpg","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/profile-pic-55a2d32cdfdd9bece5c55a32e5560748.jpg\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport avatar from \"../../content/assets/profile-pic.jpg\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <img\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n          width: rhythm(2),\n          height: rhythm(2),\n        }}\n        src={avatar}\n      />\n      <p style={{ whiteSpace: \"pre-wrap\" }}>\n        Personal blog by{\" \"}\n        <a href={`https://twitter.com/${social.twitter}`}>{author}</a>.{\"\\n\"}\n        Kiss the demons out of my dreams.\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"\" lang={pageContext.langKey} />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            langKey\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["useStaticQuery","site","siteMetadata","author","social","style","display","marginBottom","rhythm","alt","marginRight","minWidth","borderRadius","width","height","src","avatar","whiteSpace","href","twitter","data","location","pageContext","siteTitle","title","posts","allMarkdownRemark","edges","lang","langKey","map","node","frontmatter","fields","slug","key","Link","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}